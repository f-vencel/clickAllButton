@import url('https://fonts.googleapis.com/css2?family=Noto+Sans:ital,wght@0,100..900;1,100..900&family=Open+Sans:ital,wght@0,300..800;1,300..800&display=swap');

:root {
  font-family: 'Noto Sans', sans-serif;
}


body {
  margin: 0;
  height: 100vh;
  background-color: #ff9;
}


@property --score-percentage {
  syntax: "<percentage>";
  initial-value: 0%;
  inherits: true;
}

.score {
  height: clamp(15px, 1rem, 45px);
  width: 100%;
  background-color: black;
  box-sizing: border-box;
  border-bottom: 2px solid #000;

  position: relative;

  color: #ff9;
  overflow: hidden;
}
.score .load {
  position: absolute;
  width: calc(100% + 5px);
  height: 100%;
  
  box-sizing: border-box;
  
  transition: --score-percentage 500ms;

  background-color: hsl(120, 100%, 50%);
  background-image: linear-gradient(90deg, hsl(0, 100%, 50%), hsl(60, 100%, 40%), hsl(120, 100%, 50%));
  mask-image: linear-gradient(90deg, #000 max(0, calc(var(--score-percentage) - 5px)), #000a max(0, calc(var(--score-percentage) - 5px)) var(--score-percentage), #0000 var(--score-percentage));
}
.score .points {
  position: absolute;
  font-size: 1rem;
  line-height: 1rem;
  inset: 0;
  margin: auto;
  width: fit-content;
}

.field {
  width: 100%;
  height: calc(100% - clamp(15px, 1rem, 45px));
  position: absolute;
  bottom: 0;
  overflow: hidden;
  --hit-span-count: 10;
}


.button.catch {
  background-color: rgba(0, 0, 0, 0.2);
  border: 2px solid currentColor;
  position: absolute;
  border-radius: 15px;
  padding: 0.6rem 2rem;
  font-family: inherit;
  font-weight: 800;
  font-size: 1.2rem;
  color: black;
}
.button.catch:hover {
  background-color: rgba(0, 0, 0, 0.4);
}
.button:focus-visible {
  outline: 4px solid hsl(0, 0%, 30%);
}
.button.catch:active {
  background-color: rgba(0, 0, 0, 0.6);
}
.button.catch.fixed {
  visibility: hidden;
  z-index: -2;
}

.button.catch.hit-effect {  
  visibility: hidden;
}

button.catch .hit-span {
  --span-height: 0.4rem;

  position: absolute;
  /* inset: 0; */
  left: 50%;
  top: 50%;
  width: 1rem;
  height: var(--span-height);
  
  transform-origin: center left;
  transform: rotate(calc(var(--i) * 360deg / var(--hit-span-count)));
}
button.catch .hit-span .inner {
  position: absolute;
  width: 100%;
  height: 100%;
  
  left: 1rem;
  
  background-color: #f00a;
  border-radius: calc(var(--span-height) / 2);

  visibility: hidden;
}
button.catch.hit-effect .hit-span .inner {
  visibility: visible;
  animation: hit-effect 150ms ease-out forwards;
}

@keyframes hit-effect {
  100% {
    transform: translate(3rem);
    scale: 1.5 1;
    border-radius: calc(var(--span-height) / 3) / calc(var(--span-height) / 2);
    visibility: hidden;
  }
}



.win {
  position: absolute;
  display: none;
  flex-direction: column;
  align-items: center;
  justify-content: center;
  height: 300px;
  width: 600px;
  padding: 2rem;
  box-sizing: border-box;
  background-color: rgba(200, 120, 255, 1);
  left: 50%;
  top: 50%;
  transform: translate(-50%, -50%);
  border: 4px solid rgba(180, 100, 235, 1);
  border-radius: 30px;
}
.winBefore {
  position: absolute;
  display: none;
  left: 0;
  top: 0;
  height: 100%;
  width: 100%;
  background-color: rgba(0, 0, 0, 0.3);
}
.win * {
  font-size: 4em;
  margin: 0;
}